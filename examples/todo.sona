// Todo list application for Sona language
import native_stdin
import utils.math.smod as math
import utils.array.smod as array
import utils.string.smod as string

// Initialize empty todo lists
let todos = []
let completed = []

// Helper function: check if a number is negative
func is_negative(num) {
    let num_str = math.to_str(num)
    let first_char = string.substr(num_str, 0, 1)
    return math.eq(first_char, "-")
}

// Helper function: check if a < b
func is_less_than(a, b) {
    let diff = math.subtract(a, b)
    return is_negative(diff)
}

// Helper function for integer validation
func is_valid_index(input, max_index) {
    // Try to parse as integer
    let index = math.parse_int(input)
    
    // Check for valid parsing and range
    if math.is_nan(index) {
        return 0
    }
    
    if is_negative(index) {
        return 0
    }
    
    if is_less_than(index, max_index) {
        return 1
    }
    
    return 0
}

// Add a new todo item
func add_todo() {
    let text = native_stdin.input("Enter todo item: ")
    if string.length(text) {
        array.push(todos, text)
        print("Added todo: " + text)
    } else {
        print("Todo item cannot be empty.")
    }
    return 0
}

// List all todo items
func list_todos() {
    let count = array.length(todos)
    
    if math.eq(count, 0) {
        print("\nNo todo items.")
        return 0
    }
    
    print("\n=== TODO ITEMS ===")
    let i = 0
    
    while is_less_than(i, count) {
        let item = array.get(todos, i)
        print(math.to_str(i) + ": " + item)
        let i = i + 1
    }
    print("=================")
    return 0
}

// Complete a todo item
func complete_todo() {
    list_todos()
    
    let count = array.length(todos)
    if math.eq(count, 0) {
        return 0
    }
    
    let input = native_stdin.input("\nEnter number of item to complete: ")
    
    if is_valid_index(input, count) {
        let index = math.parse_int(input)
        let item = array.get(todos, index)
        
        // Add to completed list
        array.push(completed, item)
        
        // Remove from todos list (create new array without the item)
        let new_todos = []
        let i = 0
        
        while is_less_than(i, count) {
            if math.eq(i, index) {
                // Skip this item
            } else {
                array.push(new_todos, array.get(todos, i))
            }
            let i = i + 1
        }
        
        let todos = new_todos
        print("Marked as complete: " + item)
    } else {
        print("Invalid item number.")
    }
    return 0
}

// List all completed items
func list_completed() {
    let count = array.length(completed)
    
    if math.eq(count, 0) {
        print("\nNo completed items.")
        return 0
    }
    
    print("\n=== COMPLETED ITEMS ===")
    let i = 0
    
    while is_less_than(i, count) {
        let item = array.get(completed, i)
        print(math.to_str(i) + ": " + item)
        let i = i + 1
    }
    print("======================")
    return 0
}

// Main program loop
let running = 1
while running {
    print("\n=== TODO APP ===")
    print("1. Add todo item")
    print("2. List todo items")
    print("3. Complete todo item")
    print("4. List completed items")
    print("5. Exit")
    
    let choice = native_stdin.input("\nEnter your choice (1-5): ")
    
    if math.eq(choice, "1") {        add_todo()
    } else {
        if math.eq(choice, "2") {
            list_todos()
        } else {
            if math.eq(choice, "3") {
                complete_todo()
            } else {
                if math.eq(choice, "4") {
                    list_completed()
                } else {
                    if math.eq(choice, "5") {
                        let running = 0
                    } else {
                        print("Invalid choice. Please enter a number between 1 and 5.")
                    }
                }
            }
        }
    }
}

print("Thank you for using Sona Todo App!")
