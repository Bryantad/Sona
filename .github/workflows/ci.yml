name: Sona CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  core-tests:
    name: Core tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Lint (ruff)
        run: ruff check .
      - name: Type check (mypy)
        run: mypy sona || true
      - name: Run tests
        env:
          PYTEST_ADDOPTS: -q
        run: |
          pytest --cov=sona --cov-report=xml --cov-report=term:skip-covered \
            --cov-report=html
      - name: Upload coverage XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml
      - name: Upload coverage HTML
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

  stdlib-ci:
    name: Stdlib CI (${{ matrix.os }})
    needs: core-tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: make stdlib-all
        run: make stdlib-all
        shell: bash
      - name: make test-stdlib
        run: make test-stdlib
        shell: bash
      - name: make fuzz TARGET=csv
        run: make fuzz TARGET=csv
        shell: bash
      - name: make fuzz TARGET=regex
        run: make fuzz TARGET=regex
        shell: bash
      - name: make bench MODULE=hash
        run: make bench MODULE=hash
        shell: bash
      - name: Package stdlib examples
        if: matrix.os == 'ubuntu-latest'
        run: make examples-archive
        shell: bash
      - name: Upload stdlib examples
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: stdlib-examples
          path: artifacts/stdlib-examples.zip
      - name: Upload stdlib coverage HTML
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: stdlib-coverage-html
          path: htmlcov
