# env.smod
# Purpose: Interact with process environment variables and .env files.
# Inputs: Keys and values (strings) plus optional defaults for typed helpers.
# Outputs: Strings, booleans, numbers, and dictionaries mirroring native helpers.
# Errors: Currently return nil/false on failure; will migrate to Result once runtime support lands.

func __default(value, fallback) {
	if value == nil {
		return fallback
	}
	return value
}

func get(key, default) {
	return __native__.env_get(key, default)
}

func get_bool(key, default) {
	return __native__.env_get_bool(key, default)
}

func get_int(key, default) {
	return __native__.env_get_int(key, default)
}

func get_float(key, default) {
	return __native__.env_get_float(key, default)
}

func exists(key) {
	return __native__.env_exists(key)
}

func set(key, value) {
	return __native__.env_set(key, value)
}

func set_many(values, overwrite) {
	if overwrite == nil {
		overwrite = true
	}
	return __native__.env_set_many(values, overwrite)
}

func delete(key) {
	return __native__.env_delete(key)
}

func delete_many(keys) {
	return __native__.env_delete_many(keys)
}

func as_dict(prefix, lowercase_keys, strip_prefix) {
	if lowercase_keys == nil {
		lowercase_keys = false
	}
	if strip_prefix == nil {
		strip_prefix = false
	}
	return __native__.env_as_dict(prefix, lowercase_keys, strip_prefix)
}

func keys(prefix) {
	return __native__.env_keys(prefix)
}

func parse_dotenv(content) {
	return __native__.env_parse_dotenv(content)
}

func load_dotenv(path, override, encoding) {
	return __native__.env_load_dotenv(
		__default(path, ".env"),
		__default(override, false),
		__default(encoding, "utf-8")
	)
}

func save_dotenv(path, values, sort_keys, encoding) {
	return __native__.env_save_dotenv(
		path,
		values,
		__default(sort_keys, true),
		__default(encoding, "utf-8")
	)
}

func refresh(values, overwrite) {
	return __native__.env_refresh(values, __default(overwrite, true))
}
