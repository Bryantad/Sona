name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install core + dev deps
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Lint (ruff)
        run: ruff check .
      - name: Type check (mypy)
        run: mypy sona || true
      - name: Run tests
        env:
          PYTEST_ADDOPTS: -q
        run: pytest --cov=sona --cov-report=xml --cov-report=term:skip-covered
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
      - name: Perf logging smoke (disabled by default)
        run: |
          export SONA_PERF_LOGS=1
          python -c "from sona.perf.logging import log_perf,close_logs; log_perf('ci_event', ms=1); close_logs()"
          ls -1 perf-*.jsonl || true

  stdlib-tests:
    name: Stdlib (debug, cov>=85%)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
      - name: Install core + dev deps
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run stdlib tests with debug
        env:
          SONA_DEBUG: "1"
        run: |
          python -m pytest -c pytest-stdlib.ini -q -v
      - name: Upload stdlib coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stdlib-coverage
          path: coverage.xml
